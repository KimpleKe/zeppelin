{"paragraphs":[{"text":"/* Function to load Dataframe in csv */\n\ndef loadDF(path:String)={\n    val df = spark.read.option(\"header\",\"true\").csv(s\"${path}\")\n    df.cache\n    df.printSchema\n    println(df.count)\n    println(df.first)\n    df \n}","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659045_282066004","id":"20170110-235422_363657259","result":{"code":"SUCCESS","type":"TEXT","msg":"\nloadDF: (path: String)org.apache.spark.sql.DataFrame\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:34+0000","dateFinished":"2017-01-13T00:41:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:181"},{"text":"%md\n\n## 1. load basic report training data into DataFrame","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659046_283220251","id":"20170110-235831_1214992249","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>1. load basic report training data into DataFrame</h2>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:34+0000","dateFinished":"2017-01-13T00:41:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182"},{"text":"val basicDF = loadDF(\"s3://rea-consumer-data-qa/ben-kuai/filtered/mobappbasic\")","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659046_283220251","id":"20170110-235619_1214939443","result":{"code":"SUCCESS","type":"TEXT","msg":"root\n |-- Visitor_ID: string (nullable = true)\n |-- Date: string (nullable = true)\n |-- My Rea ID (evar54): string (nullable = true)\n |-- My Rea ID Anon (evar58): string (nullable = true)\n |-- Site (c) (evar24): string (nullable = true)\n |-- Site Section (c) (evar16): string (nullable = true)\n |-- Claim My Property (event28): string (nullable = true)\n |-- Connections Lead (event26): string (nullable = true)\n |-- Get Directions Click (event51): string (nullable = true)\n |-- Live Chat (event86): string (nullable = true)\n |-- New User Registration (event3): string (nullable = true)\n |-- Note Saved to My REA (event65): string (nullable = true)\n |-- Phone No. Reveal - Click (event17): string (nullable = true)\n |-- Print Page / Download PDF (event58): string (nullable = true)\n |-- Prop Details - click map to interact (event33): string (nullable = true)\n |-- Property Details Carousel Click (event60): string (nullable = true)\n |-- Property Saved to My Realestate (event62): string (nullable = true)\n |-- Save Inspection Times to Calendar (event64): string (nullable = true)\n |-- Auction Time Saved to Calendar (event66): string (nullable = true)\n |-- Saved Search (event41): string (nullable = true)\n |-- Search Result – Successful (event4): string (nullable = true)\n |-- Search Result Carousel Click (event35): string (nullable = true)\n |-- Street View Click (event52): string (nullable = true)\n |-- Email Lead to Agent (event1): string (nullable = true)\n |-- Email sent to a Friend (event8): string (nullable = true)\n |-- Share on Social Media (event16): string (nullable = true)\n |-- Share via SMS (event87): string (nullable = true)\n |-- Survey Submitted (event100): string (nullable = true)\n |-- SMS Agent (event111): string (nullable = true)\n |-- Vendor Lead (event91): string (nullable = true)\n |-- View Floor Plan (event54): string (nullable = true)\n |-- Watch Property Video Click (event40): string (nullable = true)\n |-- Click to Apply for Property Online (event13): string (nullable = true)\n |-- 3D Tour (event101): string (nullable = true)\n |-- Save Agent Contact Details (event57): string (nullable = true)\n |-- Property Map Flyout - Premiere (event42): string (nullable = true)\n |-- Property Map Flyout - Featured (event43): string (nullable = true)\n |-- Property Map Flyout - Platinum (event44): string (nullable = true)\n |-- Property Map Flyout - Standard (event45): string (nullable = true)\n |-- Click through to Agent Website (event2): string (nullable = true)\n |-- Page Views: string (nullable = true)\n |-- Property Views (event7): string (nullable = true)\n |-- Visits: string (nullable = true)\n |-- Total Seconds Spent: string (nullable = true)\n |-- app_date: string (nullable = true)\n |-- buy: string (nullable = true)\n |-- rent: string (nullable = true)\n |-- sell: string (nullable = true)\n\n1247465\n[1000334786_108469056,November 17, 2016,null,null,null,other,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2016-10-18,0,1,0]\n\nbasicDF: org.apache.spark.sql.DataFrame = [Visitor_ID: string, Date: string ... 46 more fields]\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:34+0000","dateFinished":"2017-01-13T00:41:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:183"},{"text":"%md\n\n## 2. Further filtering and computing","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659046_283220251","id":"20170111-000015_1329010308","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>2. Further filtering and computing</h2>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:34+0000","dateFinished":"2017-01-13T00:41:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184"},{"text":"%md\n\n### 2.1 Covert Date to compatible date format and only select columns we care about","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659046_283220251","id":"20170111-013210_1845526494","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>2.1 Covert Date to compatible date format and only select columns we care about</h3>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:34+0000","dateFinished":"2017-01-13T00:41:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185"},{"text":"// Change column headers to be less confusing\nval newNames = Seq(\"id\", \"date\", \"appDate\", \"siteSection\", \"pageViews\", \"buyer\", \"renter\")\n\nval transformedDF = basicDF.withColumn(\"Date\", to_date(unix_timestamp($\"Date\", \"MMMM dd, yyyy\").cast(\"timestamp\")))\n                           .select(\"Visitor_ID\", \"Date\", \"app_date\", \"Site Section (c) (evar16)\", \"Page Views\", \"buy\", \"rent\")\n                           .toDF(newNames: _*)\n\ntransformedDF.createOrReplaceTempView(\"transformed\")\n                           \ntransformedDF.show","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659047_282835502","id":"20170111-013207_742342065","result":{"code":"SUCCESS","type":"TEXT","msg":"\nnewNames: Seq[String] = List(id, date, appDate, siteSection, pageViews, buyer, renter)\n\ntransformedDF: org.apache.spark.sql.DataFrame = [id: string, date: date ... 5 more fields]\n+--------------------+----------+----------+-----------+---------+-----+------+\n|                  id|      date|   appDate|siteSection|pageViews|buyer|renter|\n+--------------------+----------+----------+-----------+---------+-----+------+\n|1000334786_108469056|2016-11-17|2016-10-18|      other|        0|    0|     1|\n|100117622_3200918233|2016-11-17|2016-09-18|      other|        0|    1|     0|\n|1001334017_380412...|2016-11-17|2016-09-17|      other|        0|    1|     0|\n|1003502129_332735...|2016-11-17|2016-10-21|      other|        0|    0|     1|\n|1004645806_512761870|2016-11-17|2016-10-11|      other|        0|    0|     1|\n|1005471719_132266...|2016-11-17|2016-10-10|      other|        0|    0|     1|\n|1005776509_329950...|2016-11-17|2016-09-29|      other|        0|    1|     0|\n|1006374153_227480...|2016-11-17|2016-09-13|      other|        0|    1|     1|\n|1006507058_281913...|2016-11-17|2016-09-06|      other|        0|    1|     0|\n|1006553604_374912681|2016-11-17|2016-09-18|      other|        0|    0|     1|\n|1007178073_422659...|2016-11-17|2016-11-14|      other|        0|    1|     0|\n|1007331783_148446...|2016-11-17|2016-11-12|      other|        0|    1|     0|\n|1007566320_278575...|2016-11-17|2016-11-02|      other|        0|    0|     1|\n|100766041_2564673017|2016-11-17|2016-10-19|      other|        0|    1|     0|\n|1011721938_904648630|2016-11-17|2016-09-26|      other|        0|    0|     1|\n|1015111970_147361...|2016-11-17|2016-11-17|      other|        0|    1|     0|\n|1015111970_147361...|2016-11-17|2016-11-17|      other|        2|    1|     0|\n|1015111970_147361...|2016-11-17|2016-11-17|        buy|        2|    1|     0|\n|1015111970_147361...|2016-11-17|2016-11-17|     my rea|        1|    1|     0|\n|1015353311_120026...|2016-11-17|2016-09-30|      other|        0|    0|     1|\n+--------------------+----------+----------+-----------+---------+-----+------+\nonly showing top 20 rows\n\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:34+0000","dateFinished":"2017-01-13T00:41:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"%sql\n\n/* Run query to navigate data */\nselect count(distinct(id)) from transformed where buyer = 1 and renter = 1","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659047_282835502","id":"20170111-014702_1268063849","result":{"code":"SUCCESS","type":"TABLE","msg":"count(DISTINCT id)\n811\n","comment":"","msgTable":[[{"value":"811"}]],"columnNames":[{"name":"count(DISTINCT id)","index":0,"aggr":"sum"}],"rows":[["811"]]},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:37+0000","dateFinished":"2017-01-13T00:41:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"text":"%md\n\n### 2.2 Compute the proportions of buy/rent page views against total page views of buy and rent","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659047_282835502","id":"20170111-013425_2070123478","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>2.2 Compute the proportions of buy/rent page views against total page views of buy and rent</h3>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:35+0000","dateFinished":"2017-01-13T00:41:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"text":"%md\n\n#### 2.2.1 Extract data for each user for 3 days of activities since first seen on app","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659047_282835502","id":"20170111-033923_1140838742","result":{"code":"SUCCESS","type":"HTML","msg":"<h4>2.2.1 Extract data for each user for 3 days of activities since first seen on app</h4>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:35+0000","dateFinished":"2017-01-13T00:41:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"import org.apache.spark.sql.expressions.Window\nimport org.apache.spark.sql.functions.{rank, desc}\n\nval window = Window.partitionBy($\"id\").orderBy(asc(\"date\"))\n\n// We only care about page views in buy and rent site sections\nval SiteSectionNames = Array(\"buy\", \"rent\", \"empty-channel\", \"my rea\", \"other\", \"p4ep\", \"sold\")\nval siteSections = SiteSectionNames.map(col(_))\n\nval filteredDF = transformedDF.where(\"not (buyer = 1 and renter = 1)\") // excluding users that are both buyer and renter. Disable this step if you want to include them\n                              .groupBy($\"id\", $\"date\", $\"buyer\", $\"renter\").pivot(\"siteSection\")\n                              .agg(sum(\"pageViews\"))\n                              .na.fill(0, SiteSectionNames)\n                              .withColumn(\"rank\", rank.over(window)).where($\"rank\" <= 3)\n                              .withColumn(\"totalViews\", siteSections.reduce(_ + _))\n\nval aggregatedDF = filteredDF.select(\"id\", \"date\", \"buy\", \"rent\", \"empty-channel\", \"my rea\", \"other\", \"p4ep\", \"sold\", \"totalViews\", \"buyer\", \"renter\")\n                             .groupBy($\"id\", $\"buyer\", $\"renter\")\n                             .agg(sum(\"buy\").alias(\"buyPageViews\"), \n                                  sum(\"rent\").alias(\"rentPageViews\"), \n                                  sum(\"my rea\").alias(\"myReaPageViews\"), \n                                  sum(\"p4ep\").alias(\"p4epPageViews\"), \n                                  sum(\"sold\").alias(\"soldPageViews\"), \n                                  sum(\"totalViews\").alias(\"totalViews\"))\n                             .where(\"totalViews > 3\")","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659048_280911758","id":"20170111-014042_1855305671","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.sql.expressions.Window\n\nimport org.apache.spark.sql.functions.{rank, desc}\n\nwindow: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@4c8ba889\n\nSiteSectionNames: Array[String] = Array(buy, rent, empty-channel, my rea, other, p4ep, sold)\n\nsiteSections: Array[org.apache.spark.sql.Column] = Array(buy, rent, empty-channel, my rea, other, p4ep, sold)\n\nfilteredDF: org.apache.spark.sql.DataFrame = [id: string, date: date ... 11 more fields]\n\naggregatedDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, buyer: string ... 7 more fields]\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:38+0000","dateFinished":"2017-01-13T00:41:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:190"},{"text":"aggregatedDF.show","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659048_280911758","id":"20170111-042447_352384704","result":{"code":"SUCCESS","type":"TEXT","msg":"+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+\n|                  id|buyer|renter|buyPageViews|rentPageViews|myReaPageViews|p4epPageViews|soldPageViews|totalViews|\n+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+\n|1019948634_269282...|    0|     1|         0.0|        127.0|           4.0|          0.0|          0.0|     135.0|\n|1029578045_558523812|    1|     0|       113.0|          0.0|           2.0|          0.0|          0.0|     117.0|\n|1190390757_597050966|    1|     0|         7.0|         38.0|           0.0|          0.0|          0.0|      53.0|\n|1237281317_239801...|    1|     0|        17.0|          0.0|           3.0|          0.0|          0.0|      30.0|\n|1292825900_186726...|    1|     0|        50.0|          0.0|           5.0|          0.0|          0.0|      64.0|\n|1316059427_157533...|    1|     0|        84.0|          0.0|           1.0|          0.0|          0.0|      89.0|\n| 13571208_4248780246|    1|     0|        60.0|         79.0|           0.0|          0.0|          0.0|     146.0|\n|1369497456_678839123|    1|     0|        22.0|          0.0|           0.0|          2.0|          0.0|      26.0|\n|1432046809_107840...|    1|     0|        58.0|          0.0|           2.0|          0.0|          0.0|      62.0|\n|1464018333_182274...|    0|     1|         1.0|        111.0|           5.0|          0.0|          0.0|     127.0|\n|1520972556_350767...|    0|     1|       123.0|        262.0|           7.0|          4.0|          0.0|     408.0|\n|1569731372_275028...|    0|     1|         0.0|         45.0|           1.0|          0.0|          0.0|      49.0|\n|168065593_1290046132|    1|     0|        47.0|          7.0|          11.0|          1.0|          0.0|      75.0|\n|1738783130_177202939|    0|     1|         5.0|        120.0|          13.0|          0.0|          0.0|     147.0|\n|1739745498_141357...|    0|     1|         4.0|        113.0|           0.0|          0.0|          0.0|     131.0|\n|1758921571_156946...|    0|     1|        19.0|          3.0|           3.0|          0.0|          0.0|      29.0|\n|1823188917_393737...|    0|     1|         3.0|        138.0|           4.0|          0.0|          0.0|     172.0|\n|1838314563_600870029|    0|     1|         0.0|         70.0|           9.0|          0.0|          0.0|      80.0|\n|1866899056_994668118|    0|     1|         8.0|         91.0|           2.0|          0.0|          0.0|     118.0|\n|1867469300_227791...|    1|     0|        15.0|          0.0|           2.0|          0.0|          0.0|      26.0|\n+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+\nonly showing top 20 rows\n\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:38+0000","dateFinished":"2017-01-13T00:41:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:191"},{"text":"%md\n\n# Bonus Step 0: Use Logistic Regression from Spark Mllib ","dateUpdated":"2017-01-13T03:30:39+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659048_280911758","id":"20170112-054155_1016453184","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Bonus Step 0: Use Logistic Regression from Spark Mllib</h1>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T03:30:39+0000","dateFinished":"2017-01-13T03:30:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192","focus":true},{"text":"%md\n\n## 0.a - Trainning","dateUpdated":"2017-01-13T03:30:50+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659048_280911758","id":"20170112-054745_1006765137","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>0.a - Trainning</h2>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T03:30:50+0000","dateFinished":"2017-01-13T03:30:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:193","focus":true},{"text":"val pageViewsProps = aggregatedDF.withColumn(\"buyProp\", col(\"buyPageViews\") / col(\"totalViews\"))\n                                 .withColumn(\"rentProp\", col(\"rentPageViews\") / col(\"totalViews\"))\n                                 .withColumn(\"myReaProp\", col(\"myReaPageViews\") / col(\"totalViews\"))\n                                 .withColumn(\"p4epProp\", col(\"p4epPageViews\") / col(\"totalViews\"))\n                                 .withColumn(\"soldProp\", col(\"soldPageViews\") / col(\"totalViews\"))\n\npageViewsProps.cache\n\npageViewsProps.show","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659048_280911758","id":"20170111-035139_636683021","result":{"code":"SUCCESS","type":"TEXT","msg":"\npageViewsProps: org.apache.spark.sql.DataFrame = [id: string, buyer: string ... 12 more fields]\n\nres33: pageViewsProps.type = [id: string, buyer: string ... 12 more fields]\n+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+--------------------+-------------------+--------------------+--------------------+--------+\n|                  id|buyer|renter|buyPageViews|rentPageViews|myReaPageViews|p4epPageViews|soldPageViews|totalViews|             buyProp|           rentProp|           myReaProp|            p4epProp|soldProp|\n+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+--------------------+-------------------+--------------------+--------------------+--------+\n|1019948634_269282...|    0|     1|         0.0|        127.0|           4.0|          0.0|          0.0|     135.0|                 0.0| 0.9407407407407408| 0.02962962962962963|                 0.0|     0.0|\n|1029578045_558523812|    1|     0|       113.0|          0.0|           2.0|          0.0|          0.0|     117.0|  0.9658119658119658|                0.0|0.017094017094017096|                 0.0|     0.0|\n|1190390757_597050966|    1|     0|         7.0|         38.0|           0.0|          0.0|          0.0|      53.0|  0.1320754716981132| 0.7169811320754716|                 0.0|                 0.0|     0.0|\n|1237281317_239801...|    1|     0|        17.0|          0.0|           3.0|          0.0|          0.0|      30.0|  0.5666666666666667|                0.0|                 0.1|                 0.0|     0.0|\n|1292825900_186726...|    1|     0|        50.0|          0.0|           5.0|          0.0|          0.0|      64.0|             0.78125|                0.0|            0.078125|                 0.0|     0.0|\n|1316059427_157533...|    1|     0|        84.0|          0.0|           1.0|          0.0|          0.0|      89.0|  0.9438202247191011|                0.0|0.011235955056179775|                 0.0|     0.0|\n| 13571208_4248780246|    1|     0|        60.0|         79.0|           0.0|          0.0|          0.0|     146.0|   0.410958904109589|  0.541095890410959|                 0.0|                 0.0|     0.0|\n|1369497456_678839123|    1|     0|        22.0|          0.0|           0.0|          2.0|          0.0|      26.0|  0.8461538461538461|                0.0|                 0.0| 0.07692307692307693|     0.0|\n|1432046809_107840...|    1|     0|        58.0|          0.0|           2.0|          0.0|          0.0|      62.0|  0.9354838709677419|                0.0| 0.03225806451612903|                 0.0|     0.0|\n|1464018333_182274...|    0|     1|         1.0|        111.0|           5.0|          0.0|          0.0|     127.0|0.007874015748031496| 0.8740157480314961| 0.03937007874015748|                 0.0|     0.0|\n|1520972556_350767...|    0|     1|       123.0|        262.0|           7.0|          4.0|          0.0|     408.0|  0.3014705882352941| 0.6421568627450981| 0.01715686274509804| 0.00980392156862745|     0.0|\n|1569731372_275028...|    0|     1|         0.0|         45.0|           1.0|          0.0|          0.0|      49.0|                 0.0| 0.9183673469387755| 0.02040816326530612|                 0.0|     0.0|\n|168065593_1290046132|    1|     0|        47.0|          7.0|          11.0|          1.0|          0.0|      75.0|  0.6266666666666667|0.09333333333333334| 0.14666666666666667|0.013333333333333334|     0.0|\n|1738783130_177202939|    0|     1|         5.0|        120.0|          13.0|          0.0|          0.0|     147.0|0.034013605442176874| 0.8163265306122449| 0.08843537414965986|                 0.0|     0.0|\n|1739745498_141357...|    0|     1|         4.0|        113.0|           0.0|          0.0|          0.0|     131.0|0.030534351145038167| 0.8625954198473282|                 0.0|                 0.0|     0.0|\n|1758921571_156946...|    0|     1|        19.0|          3.0|           3.0|          0.0|          0.0|      29.0|  0.6551724137931034|0.10344827586206896| 0.10344827586206896|                 0.0|     0.0|\n|1823188917_393737...|    0|     1|         3.0|        138.0|           4.0|          0.0|          0.0|     172.0| 0.01744186046511628| 0.8023255813953488|0.023255813953488372|                 0.0|     0.0|\n|1838314563_600870029|    0|     1|         0.0|         70.0|           9.0|          0.0|          0.0|      80.0|                 0.0|              0.875|              0.1125|                 0.0|     0.0|\n|1866899056_994668118|    0|     1|         8.0|         91.0|           2.0|          0.0|          0.0|     118.0| 0.06779661016949153| 0.7711864406779662| 0.01694915254237288|                 0.0|     0.0|\n|1867469300_227791...|    1|     0|        15.0|          0.0|           2.0|          0.0|          0.0|      26.0|  0.5769230769230769|                0.0| 0.07692307692307693|                 0.0|     0.0|\n+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+--------------------+-------------------+--------------------+--------------------+--------+\nonly showing top 20 rows\n\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:41+0000","dateFinished":"2017-01-13T00:42:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"pageViewsProps.count","dateUpdated":"2017-01-13T00:41:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659049_280527009","id":"20170111-233555_80909606","result":{"code":"SUCCESS","type":"TEXT","msg":"\nres36: Long = 21132\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:41:52+0000","dateFinished":"2017-01-13T00:42:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"/* Split dataset into training and test */\n\nval seed =2132131\nval Array(trainDF, testDF) = pageViewsProps.randomSplit(Array(0.7, 0.3), seed)","dateUpdated":"2017-01-13T00:46:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659049_280527009","id":"20170112-010728_566478054","result":{"code":"SUCCESS","type":"TEXT","msg":"\nseed: Int = 2132131\n\n\ntrainDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, buyer: string ... 12 more fields]\ntestDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, buyer: string ... 12 more fields]\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:46:00+0000","dateFinished":"2017-01-13T00:46:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"trainDF.show","dateUpdated":"2017-01-13T00:46:05+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659049_280527009","id":"20170112-045525_1515264667","result":{"code":"SUCCESS","type":"TEXT","msg":"+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+--------------------+-------------------+--------------------+--------------------+--------+\n|                  id|buyer|renter|buyPageViews|rentPageViews|myReaPageViews|p4epPageViews|soldPageViews|totalViews|             buyProp|           rentProp|           myReaProp|            p4epProp|soldProp|\n+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+--------------------+-------------------+--------------------+--------------------+--------+\n|1029578045_558523812|    1|     0|       113.0|          0.0|           2.0|          0.0|          0.0|     117.0|  0.9658119658119658|                0.0|0.017094017094017096|                 0.0|     0.0|\n|1190390757_597050966|    1|     0|         7.0|         38.0|           0.0|          0.0|          0.0|      53.0|  0.1320754716981132| 0.7169811320754716|                 0.0|                 0.0|     0.0|\n|1237281317_239801...|    1|     0|        17.0|          0.0|           3.0|          0.0|          0.0|      30.0|  0.5666666666666667|                0.0|                 0.1|                 0.0|     0.0|\n|1292825900_186726...|    1|     0|        50.0|          0.0|           5.0|          0.0|          0.0|      64.0|             0.78125|                0.0|            0.078125|                 0.0|     0.0|\n|1316059427_157533...|    1|     0|        84.0|          0.0|           1.0|          0.0|          0.0|      89.0|  0.9438202247191011|                0.0|0.011235955056179775|                 0.0|     0.0|\n|1369497456_678839123|    1|     0|        22.0|          0.0|           0.0|          2.0|          0.0|      26.0|  0.8461538461538461|                0.0|                 0.0| 0.07692307692307693|     0.0|\n|1464018333_182274...|    0|     1|         1.0|        111.0|           5.0|          0.0|          0.0|     127.0|0.007874015748031496| 0.8740157480314961| 0.03937007874015748|                 0.0|     0.0|\n|1520972556_350767...|    0|     1|       123.0|        262.0|           7.0|          4.0|          0.0|     408.0|  0.3014705882352941| 0.6421568627450981| 0.01715686274509804| 0.00980392156862745|     0.0|\n|1569731372_275028...|    0|     1|         0.0|         45.0|           1.0|          0.0|          0.0|      49.0|                 0.0| 0.9183673469387755| 0.02040816326530612|                 0.0|     0.0|\n|168065593_1290046132|    1|     0|        47.0|          7.0|          11.0|          1.0|          0.0|      75.0|  0.6266666666666667|0.09333333333333334| 0.14666666666666667|0.013333333333333334|     0.0|\n|1738783130_177202939|    0|     1|         5.0|        120.0|          13.0|          0.0|          0.0|     147.0|0.034013605442176874| 0.8163265306122449| 0.08843537414965986|                 0.0|     0.0|\n|1739745498_141357...|    0|     1|         4.0|        113.0|           0.0|          0.0|          0.0|     131.0|0.030534351145038167| 0.8625954198473282|                 0.0|                 0.0|     0.0|\n|1823188917_393737...|    0|     1|         3.0|        138.0|           4.0|          0.0|          0.0|     172.0| 0.01744186046511628| 0.8023255813953488|0.023255813953488372|                 0.0|     0.0|\n|1838314563_600870029|    0|     1|         0.0|         70.0|           9.0|          0.0|          0.0|      80.0|                 0.0|              0.875|              0.1125|                 0.0|     0.0|\n|1866899056_994668118|    0|     1|         8.0|         91.0|           2.0|          0.0|          0.0|     118.0| 0.06779661016949153| 0.7711864406779662| 0.01694915254237288|                 0.0|     0.0|\n|1886139104_623257216|    0|     1|         0.0|        106.0|          17.0|          0.0|          0.0|     131.0|                 0.0| 0.8091603053435115|  0.1297709923664122|                 0.0|     0.0|\n|1915307336_925477306|    1|     0|        38.0|          0.0|           1.0|          3.0|          2.0|      50.0|                0.76|                0.0|                0.02|                0.06|    0.04|\n|1965395956_268775...|    0|     1|         0.0|         66.0|           3.0|          1.0|          0.0|      75.0|                 0.0|               0.88|                0.04|0.013333333333333334|     0.0|\n|1983156208_185534...|    0|     1|         1.0|        242.0|          12.0|          0.0|          0.0|     257.0|0.003891050583657...| 0.9416342412451362| 0.04669260700389105|                 0.0|     0.0|\n|1993390335_157701...|    0|     1|         0.0|        278.0|           0.0|          0.0|          0.0|     291.0|                 0.0| 0.9553264604810997|                 0.0|                 0.0|     0.0|\n+--------------------+-----+------+------------+-------------+--------------+-------------+-------------+----------+--------------------+-------------------+--------------------+--------------------+--------+\nonly showing top 20 rows\n\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:46:05+0000","dateFinished":"2017-01-13T00:46:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"import org.apache.spark.sql._\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.linalg.Vectors\nimport org.apache.spark.sql.types._                                                                   \n\nval assembler = new VectorAssembler()\n  .setInputCols(Array(\"buyProp\", \"rentProp\", \"myReaProp\", \"p4epProp\", \"soldProp\"))\n  .setOutputCol(\"features\")\n  \nval tDF = assembler.transform(trainDF).select(col(\"renter\").alias(\"label\"), col(\"features\")).withColumn(\"label\", col(\"label\").cast(IntegerType))\n","dateUpdated":"2017-01-13T03:13:38+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659050_281681256","id":"20170112-044258_1911873596","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.sql._\n\nimport org.apache.spark.ml.feature.VectorAssembler\n\nimport org.apache.spark.ml.linalg.Vectors\n\nimport org.apache.spark.sql.types._\n\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_3fa3d34cb250\n\ntDF: org.apache.spark.sql.DataFrame = [label: int, features: vector]\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T03:13:38+0000","dateFinished":"2017-01-13T03:13:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:198","focus":true},{"text":"tDF.show","dateUpdated":"2017-01-13T03:13:43+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484269178191_-2005060717","id":"20170113-005938_1899727960","result":{"code":"SUCCESS","type":"TEXT","msg":"+-----+--------------------+\n|label|            features|\n+-----+--------------------+\n|    0|(5,[0,2],[0.96581...|\n|    0|(5,[0,1],[0.13207...|\n|    0|(5,[0,2],[0.56666...|\n|    0|(5,[0,2],[0.78125...|\n|    0|(5,[0,2],[0.94382...|\n|    0|(5,[0,3],[0.84615...|\n|    1|[0.00787401574803...|\n|    1|[0.30147058823529...|\n|    1|(5,[1,2],[0.91836...|\n|    0|[0.62666666666666...|\n|    1|[0.03401360544217...|\n|    1|(5,[0,1],[0.03053...|\n|    1|[0.01744186046511...|\n|    1|(5,[1,2],[0.875,0...|\n|    1|[0.06779661016949...|\n|    1|(5,[1,2],[0.80916...|\n|    0|[0.76,0.0,0.02,0....|\n|    1|[0.0,0.88,0.04,0....|\n|    1|[0.00389105058365...|\n|    1|(5,[1],[0.9553264...|\n+-----+--------------------+\nonly showing top 20 rows\n\n"},"dateCreated":"2017-01-13T00:59:38+0000","dateStarted":"2017-01-13T03:13:43+0000","dateFinished":"2017-01-13T03:13:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199","focus":true},{"text":"import org.apache.spark.ml.classification.LogisticRegression\n\nval lr = new LogisticRegression()\n  .setMaxIter(100)\n  .setRegParam(0.3)\n  .setElasticNetParam(0.8)\n\nval lrModel = lr.fit(tDF)\n\nprintln(s\"coefficients: ${lrModel.coefficients}\")\nprintln(s\"intercepts: ${lrModel.intercept}\")","dateUpdated":"2017-01-13T03:15:51+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659050_281681256","id":"20170112-043459_207907873","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.classification.LogisticRegression\n\nlr: org.apache.spark.ml.classification.LogisticRegression = logreg_7e455bffe7f6\n\nlrModel: org.apache.spark.ml.classification.LogisticRegressionModel = logreg_7e455bffe7f6\ncoefficients: (5,[0,1],[-0.9066597500906387,1.108923614376249])\nintercepts: 0.10697008400861203\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T03:15:51+0000","dateFinished":"2017-01-13T03:16:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200","focus":true},{"text":"%md\n\n## 0.b - Testing","dateUpdated":"2017-01-13T03:31:44+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659050_281681256","id":"20170112-054735_52380604","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>0.b - Testing</h2>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T03:31:44+0000","dateFinished":"2017-01-13T03:31:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201","focus":true},{"text":"// Make predictions on test data using the Transformer.transform() method.\nval validationDF = assembler.transform(testDF).select(col(\"id\"), col(\"renter\").alias(\"label\"), col(\"features\")).withColumn(\"label\", col(\"label\").cast(IntegerType))\n\nval result = lrModel.transform(validationDF)","dateUpdated":"2017-01-13T04:09:50+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659050_281681256","id":"20170112-054806_1444571957","result":{"code":"SUCCESS","type":"TEXT","msg":"\nvalidationDF: org.apache.spark.sql.DataFrame = [id: string, label: int ... 1 more field]\n\nresult: org.apache.spark.sql.DataFrame = [id: string, label: int ... 4 more fields]\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T03:53:00+0000","dateFinished":"2017-01-13T03:53:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:202","focus":true},{"text":"result.show","dateUpdated":"2017-01-13T03:53:03+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659051_281296507","id":"20170112-054911_2060832686","result":{"code":"SUCCESS","type":"TEXT","msg":"+--------------------+-----+--------------------+--------------------+--------------------+----------+\n|                  id|label|            features|       rawPrediction|         probability|prediction|\n+--------------------+-----+--------------------+--------------------+--------------------+----------+\n|1019948634_269282...|    1|(5,[1,2],[0.94074...|[-1.1501797064218...|[0.24045626046981...|       1.0|\n| 13571208_4248780246|    0|(5,[0,1],[0.41095...|[-0.3344041972297...|[0.41716940159033...|       1.0|\n|1432046809_107840...|    0|(5,[0,2],[0.93548...|[0.74119548865682...|[0.67725722135714...|       0.0|\n|1758921571_156946...|    1|[0.65517241379310...|[0.37233213697736...|[0.59202238451963...|       0.0|\n|1867469300_227791...|    0|(5,[0,2],[0.57692...|[0.41610284873598...|[0.60255032073582...|       0.0|\n|1941637900_167682...|    1|(5,[1,2],[0.80645...|[-1.0012633214088...|[0.26869310982097...|       1.0|\n|2069593397_386899...|    1|(5,[1,2],[0.70547...|[-0.8892929078493...|[0.29125576798187...|       1.0|\n|2675266675_366666...|    0|[0.6875,0.0,0.062...|[0.51635849417870...|[0.62629586696415...|       0.0|\n|2684352775_479421049|    1|(5,[0,1],[0.07142...|[-1.0719234580657...|[0.25503746775936...|       1.0|\n|2877001764_286951...|    1|(5,[1,2],[0.65079...|[-0.8286505314598...|[0.30393048378695...|       1.0|\n|2994176283_380083...|    0|[0.74712643678160...|[0.57041938444991...|[0.63885994028930...|       0.0|\n| 3071364189_91959158|    0|[0.73,0.06,0.06,0...|[0.48835611669497...|[0.61971909905778...|       0.0|\n|31632260511854862...|    0|(5,[0],[0.9565217...|[0.76026967694765...|[0.68141228070943...|       0.0|\n|31635921971474734...|    1|(5,[0,1],[0.375,0...|[0.09441187047834...|[0.52358545094620...|       0.0|\n|31683427488044170...|    1|(5,[1,2],[0.88983...|[-1.0937241476484...|[0.25091764600977...|       1.0|\n|31689453885506278...|    0|[0.32,0.32,0.08,0...|[-0.1716945205800...|[0.45718150544104...|       1.0|\n|31737896478040432...|    0|(5,[0,4],[0.75308...|[0.57582306112137...|[0.64010572750191...|       0.0|\n|31739843622939001...|    1|(5,[1,2],[0.44680...|[-0.6024465925597...|[0.35378415163218...|       1.0|\n|31743926289991662...|    1|(5,[1,2],[0.13207...|[-0.2534316934545...|[0.43697902340864...|       1.0|\n|31755288905158841...|    0|[0.23684210526315...|[-0.1256924830663...|[0.46861818408917...|       1.0|\n+--------------------+-----+--------------------+--------------------+--------------------+----------+\nonly showing top 20 rows\n\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T03:53:03+0000","dateFinished":"2017-01-13T03:53:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:203","focus":true},{"text":"%md\n\n## 0.c - Evaluation using Area Under ROC (Receiver Operation Characteristic)","dateUpdated":"2017-01-13T03:31:35+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484270167666_-526274245","id":"20170113-011607_248722798","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>0.c - Evaluation using Area Under ROC (Receiver Operation Characteristic)</h2>\n"},"dateCreated":"2017-01-13T01:16:07+0000","dateStarted":"2017-01-13T03:31:35+0000","dateFinished":"2017-01-13T03:31:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:204","focus":true},{"text":"/* Example result of evaluation */\n\nimport org.apache.spark.ml.evaluation._\n\nval eval = new BinaryClassificationEvaluator\n\neval.evaluate(result)","dateUpdated":"2017-01-13T03:16:57+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484269702578_-1788111599","id":"20170113-010822_2099785794","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.evaluation._\n\neval: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_c81019acb858\n\nres182: Double = 0.974111174751823\n"},"dateCreated":"2017-01-13T01:08:22+0000","dateStarted":"2017-01-13T03:16:57+0000","dateFinished":"2017-01-13T03:17:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:205","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484274554978_912721626","id":"20170113-022914_159984420","dateCreated":"2017-01-13T02:29:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2266","text":"%md\n\n## 1. Advanced: Model selection and hyperparameter tuning","dateUpdated":"2017-01-13T03:31:48+0000","dateFinished":"2017-01-13T03:31:48+0000","dateStarted":"2017-01-13T03:31:48+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>1. Advanced: Model selection and hyperparameter tuning</h2>\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484275531684_-529092846","id":"20170113-024531_1765424503","dateCreated":"2017-01-13T02:45:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2338","text":"import org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.feature.{HashingTF, Tokenizer}\nimport org.apache.spark.ml.linalg.Vector\nimport org.apache.spark.ml.tuning.{CrossValidator, ParamGridBuilder}\nimport org.apache.spark.sql.Row\n\n// model learner\nval lr = new LogisticRegression()\n  .setMaxIter(100)\n  \n// Set Pipeline\nval pipeline = new Pipeline()\n  .setStages(Array(lr))\n  \n// Set param grid to specify differen params\nval paramGrid = new ParamGridBuilder()\n  .addGrid(lr.elasticNetParam, Array(0.8, 0.5))\n  .addGrid(lr.regParam, Array(0.1, 0.01))\n  .build()\n  \n// Cross validator\nval cv = new CrossValidator()\n  .setEstimator(pipeline)\n  .setEvaluator(new BinaryClassificationEvaluator)\n  .setEstimatorParamMaps(paramGrid)\n  .setNumFolds(3)\n  \n// Run cross-validation, and choose the best set of parameters.\n// First, split the original data into 9:1 training and test set, test set will be used for the final check\nval Array(training, test) =  assembler.transform(pageViewsProps).select(col(\"id\"), col(\"rentProp\"), col(\"renter\").alias(\"label\"), col(\"features\")).withColumn(\"label\", col(\"label\").cast(IntegerType))\n                    .randomSplit(Array(0.9, 0.1), seed)\n\n// Find the best model using the pipeline\nval cvModel = cv.fit(training)\n","dateUpdated":"2017-01-13T04:09:40+0000","dateFinished":"2017-01-13T04:14:33+0000","dateStarted":"2017-01-13T04:09:40+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.classification.LogisticRegression\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\nimport org.apache.spark.ml.feature.{HashingTF, Tokenizer}\n\nimport org.apache.spark.ml.linalg.Vector\n\nimport org.apache.spark.ml.tuning.{CrossValidator, ParamGridBuilder}\n\nimport org.apache.spark.sql.Row\n\nlr: org.apache.spark.ml.classification.LogisticRegression = logreg_142e3ffc4333\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_3100b8c1310c\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tlogreg_142e3ffc4333-elasticNetParam: 0.8,\n\tlogreg_142e3ffc4333-regParam: 0.1\n}, {\n\tlogreg_142e3ffc4333-elasticNetParam: 0.5,\n\tlogreg_142e3ffc4333-regParam: 0.1\n}, {\n\tlogreg_142e3ffc4333-elasticNetParam: 0.8,\n\tlogreg_142e3ffc4333-regParam: 0.01\n}, {\n\tlogreg_142e3ffc4333-elasticNetParam: 0.5,\n\tlogreg_142e3ffc4333-regParam: 0.01\n})\n\ncv: org.apache.spark.ml.tuning.CrossValidator = cv_f0eb95d962e8\n\n\ntraining: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, rentProp: double ... 2 more fields]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, rentProp: double ... 2 more fields]\n\ncvModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_f0eb95d962e8\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484280056253_-1700436017","id":"20170113-040056_209181227","dateCreated":"2017-01-13T04:00:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3964","text":"def hypothesis(threshold: Double, rentProp: Double): Double = {\n    if (rentProp > threshold) 1 else 0\n}\n\nval hypothesis1 = hypothesis(0.5, _: Double)\nval hypothesis_udf = udf(hypothesis1)","dateUpdated":"2017-01-13T04:08:12+0000","dateFinished":"2017-01-13T04:08:14+0000","dateStarted":"2017-01-13T04:08:12+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\nhypothesis: (threshold: Double, rentProp: Double)Double\n\nhypothesis1: Double => Double = <function1>\n\nhypothesis_udf: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,DoubleType,Some(List(DoubleType)))\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484278416862_1956324799","id":"20170113-033336_1940168089","dateCreated":"2017-01-13T03:33:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3217","text":"val predicted = cvModel.transform(test)\n\n\nval two = predicted.withColumn(\"prediction2\", hypothesis_udf(col(\"rentProp\")))\n         .select(\"id\", \"label\", \"prediction\", \"prediction2\")\n        // .show","dateUpdated":"2017-01-13T04:23:22+0000","dateFinished":"2017-01-13T04:23:26+0000","dateStarted":"2017-01-13T04:23:22+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\npredicted: org.apache.spark.sql.DataFrame = [id: string, rentProp: double ... 5 more fields]\n\ntwo: org.apache.spark.sql.DataFrame = [id: string, label: int ... 2 more fields]\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484278502571_1021643838","id":"20170113-033502_1346974319","dateCreated":"2017-01-13T03:35:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3293","text":"/* Example result of evaluation */\n\nimport org.apache.spark.ml.evaluation._\n\nval eval = new BinaryClassificationEvaluator\n\neval.evaluate(cvModel.transform(test))","dateUpdated":"2017-01-13T04:05:28+0000","dateFinished":"2017-01-13T04:05:32+0000","dateStarted":"2017-01-13T04:05:28+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.evaluation._\n\neval: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_5a7ceef039fe\n\nres213: Double = 0.9755570767632896\n"}},{"text":"%md \n\n# Optional: Test Error Rate Using RMSE","dateUpdated":"2017-01-13T03:32:23+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659051_281296507","id":"20170112-001952_2082663494","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Optional: Test Error Rate Using RMSE</h1>\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T03:32:23+0000","dateFinished":"2017-01-13T03:32:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:206","focus":true},{"text":"// Test the error Rate\nval totalUsers = two.count\n\n// RMSE error rate for logistic regression\nval sumSquareErrorLR = two.withColumn(\"score\", col(\"prediction\") - col(\"label\"))\n                                   .select(pow(\"score\", 2).alias(\"squareError\"))\n                                   .agg(sum(\"squareError\")).collect\n                                   .map {\n                                      case Row(s: Double) => s\n                                   }\n              \nsumSquareErrorLR(0) / totalUsers\n\n// RMSE error rate for rule based prediction\nval sumSquareErrorRB = two.withColumn(\"score\", col(\"prediction2\") - col(\"label\"))\n                                   .select(pow(\"score\", 2).alias(\"squareError\"))\n                                   .agg(sum(\"squareError\")).collect\n                                   .map {\n                                      case Row(s: Double) => s\n                                   }\n                       \nsumSquareErrorRB(0) / totalUsers","dateUpdated":"2017-01-13T04:26:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659051_281296507","id":"20170111-234312_1676598721","result":{"code":"SUCCESS","type":"TEXT","msg":"\ntotalUsers: Long = 2080\n\nsumSquareErrorLR: Array[Double] = Array(85.0)\n\nres238: Double = 0.040865384615384616\n\nsumSquareErrorRB: Array[Double] = Array(154.0)\n\nres239: Double = 0.07403846153846154\n"},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T04:26:47+0000","dateFinished":"2017-01-13T04:26:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:207","focus":true},{"text":"","dateUpdated":"2017-01-13T00:41:35+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484262659054_280142260","id":"20170111-232016_1468634915","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-12T23:10:59+0000","dateStarted":"2017-01-13T00:42:06+0000","dateFinished":"2017-01-13T00:42:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:208"}],"name":"Spark_MLlib","id":"2C8JU7G75","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}